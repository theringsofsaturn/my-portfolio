.app__navbar {
  width: 100%;

  display: flex;
  justify-content: space-between;
  align-items: center;

  padding: 1rem 2rem; // top & bottom - left & right
  background: rgba(255, 255, 255, 0.25);
  backdrop-filter: blur(4px); // blur the background
  -webkit-backdrop-filter: blur(4px);
  border: 1px solid rgba(255, 255, 255, 0.18);
  position: fixed;
  z-index: 2; // above the other elements
}

.app__navbar-logo {
  display: flex;
  justify-content: flex-start;
  align-items: center;

  // with scss we can have nested properies. Instead of repeating the entire class to target the image we can simply target the img inside the app__navbar-logo
  // The structure in the jsx is actually like that: thee is an img tag inside a div with a classname of app__navbar-logo

  img {
    width: 60px;
    height: 50px;

    // we can keep nesting with scss and also add media queries for specific elements, like in this case with img tag.
    // media queries are used to target specific screen sizes.

    // This is for extra large devices
    @media screen and (min-width: 2000px) {
      width: 80px;
      height: 60px;
    }
  }
}

.app__navbar-links {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  list-style: none; // removes the default list styling

  // Targeting the individual items inside the navbar links
  li {
    margin: 0 1rem;
    cursor: pointer;
    flex-direction: column;

    // Inside this li there's a div and inside there's an anchor tag (which iterates each item/links). We can specifically target that.
    div {
      // This div is the small DOT appearing when hovering over the links
      width: 5px;
      height: 5px;
      background: transparent;
      border-radius: 50%; // rounded corners
    }

    a {
      // using the variable we defined inside the index.css file in the :root selector.
      color: var(--gray-color);
      text-decoration: none; // removes the underline from the links
      text-transform: uppercase;
      font-weight: 500; // bolder font
      transition: all 0.3s ease-in-out; // transition effect for all elements when we hover over them
      // Instead writing a new class and target a:hover , we can directly target like this with the & sign. Which means we are refering to the element we are inside of. So, the hover is refering to the ancor tag right here.
      &:hover {
        color: var(
          --secondary-color
        ); // the color "slowly" transitions (0.3s) to the secondary color when we hover
      }

      flex-direction: column;
    }
    // this hover targets the li above and the div inside it.
    // It will appear a small DOT when we hover. The DOT is the div above inside this "li" (with 5px and border radius 50% --> commented above)
    &:hover {
      div {
        background: var(--secondary-color);
      }
    }
  }

  // media query for the links of the navbar. We want to collapse them when the screen is smaller than 900px.
  // So, for devices higher than 900px display none.
  @media screen and (max-width: 900px) {
    display: none;
  }
}

.app__navbar-menu {
  width: 35px;
  height: 35px;
  border-radius: 50%;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  background: var(--secondary-color);

  svg {
    width: 70%;
    height: 70%;
    color: var(--white-color);
  }

  div {
    position: fixed;
    top: 0;
    bottom: 0;
    right: 0;
    z-index: 5;
    padding: 1rem;
    width: 80%;
    height: 100vh;
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
    flex-direction: column;
    background: url("../../assets/bgWhite.png");
    background-color: var(--white-color);
    background-size: cover;
    background-repeat: repeat;
    /* top box shadow */
    box-shadow: 0px 0px 20px rgba(168, 168, 168, 0.15);

    svg {
      width: 35px;
      height: 35px;
      color: var(--secondary-color);
      margin: 0.5rem 1rem;
    }

    ul {
      list-style: none;
      margin: 0;
      padding: 0;
      height: 100%;
      width: 100%;
      display: flex;
      justify-content: flex-start;
      align-items: flex-start;
      flex-direction: column;

      li {
        margin: 1rem;

        a {
          color: var(--gray-color);
          text-decoration: none;
          font-size: 1rem;
          text-transform: uppercase;
          font-weight: 500;

          transition: all 0.3s ease-in-out;
          &:hover {
            color: var(--secondary-color);
          }
        }
      }
    }

    @media screen and (min-width: 900px) {
      display: none;
    }
  }
  @media screen and (min-width: 900px) {
    display: none;
  }
}
